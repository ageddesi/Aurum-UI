{"version":3,"file":"accordion-group.js","sourceRoot":"","sources":["../../src/accordion/accordion-group.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAG1D,IAAa,cAAc,GAA3B,MAAa,cAAe,SAAQ,UAAU;IAA9C;;QAGI,WAAM,GAAW,SAAS,CAAC,CAAC,mDAAmD;QAG/E,eAAU,GAAW,MAAM,CAAC;IA8DhC,CAAC;IA/BY,MAAM;QACX,OAAO,IAAI,CAAA;oDACiC,IAAI,CAAC,MAAM;;;SAGtD,CAAC;IACN,CAAC;IAEQ,iBAAiB;QACtB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,UAAU,CAAC,GAAG,EAAE;YACZ,IAAI,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC;YAC/C,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;gBACvB,KAAK,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAA;gBAC7C,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;gBACzC,KAAK,IAAI,CAAC,CAAC;gBAEX,IAAG,IAAI,CAAC,UAAU,KAAK,MAAM,EAAE;oBAC3B,KAAK,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,KAAK,EAAE,EAAE;wBAClD,IAAG,KAAK,CAAC,MAAM,EAAC;4BACZ,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;gCAC9B,IAAI,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE,KAAK,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;gCAC1D,KAAK,CAAC,YAAY,CAAC,YAAY,EAAE,WAAW,CAAA,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;4BACjF,CAAC,CAAC,CAAA;yBACL;oBACL,CAAC,CAAC,CAAA;iBACL;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;CACJ,CAAA;AA5DmB,qBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;KA2B1B,CAAA;AAhCF;IADC,QAAQ,EAAE;8CACgB;AAG3B;IADC,QAAQ,EAAE;kDACiB;AANnB,cAAc;IAD1B,aAAa,CAAC,uBAAuB,CAAC;GAC1B,cAAc,CAoE1B;SApEY,cAAc","sourcesContent":["import {LitElement, html, css} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\n\r\n@customElement('aurum-accordion-group')\r\nexport class AccordionGroup extends LitElement {\r\n\r\n    @property()\r\n    design: string = \"blocked\"; // blocked, carded-block, carded, carded-full-width\r\n\r\n    @property()\r\n    singleOpen: string = \"true\";\r\n\r\n    static override styles = css`\r\n      \r\n        .blocked{\r\n          // no default styling     \r\n        }\r\n      \r\n        .carded-block {\r\n            padding: 8px;\r\n            border: 1px solid #C4C4C4;\r\n            border-radius: 4px;\r\n            box-shadow: 0px 1px 4px 0px #0000001A;\r\n        }\r\n      \r\n        .carded {\r\n          padding: 8px;\r\n          border: 1px solid #C4C4C4;\r\n          border-radius: 4px;\r\n          box-shadow: 0px 1px 4px 0px #0000001A;\r\n        }\r\n        \r\n        .carded-full-width {\r\n          padding: 0;\r\n          border: 1px solid #C4C4C4;\r\n          border-radius: 4px;\r\n          box-shadow: 0px 1px 4px 0px #0000001A;\r\n        }\r\n      \r\n    `;\r\n\r\n    override render() {\r\n        return html`\r\n            <div class=\"accordion-group-container ${this.design}\">\r\n                <slot></slot>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    override connectedCallback() {\r\n        super.connectedCallback();\r\n        setTimeout(() => {\r\n            let children = [...this.querySelectorAll(\"*\")];\r\n            let index = 0;\r\n            children.forEach((child) => {\r\n                child.setAttribute(\"index\", index.toString())\r\n                child.setAttribute(\"design\", this.design)\r\n                index += 1;\r\n\r\n                if(this.singleOpen === \"true\") {\r\n                    child.addEventListener('accordion-toggled', (value) => {\r\n                        if(value.detail){\r\n                            children.forEach((child, index) => {\r\n                                let isSameIndex = index.toString() === value.detail.index;\r\n                                child.setAttribute('isExpanded', isSameIndex? value.detail.status : \"false\");\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'aurum-accordion-group' : AccordionGroup\r\n    }\r\n}\r\n"]}