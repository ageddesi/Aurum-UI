{"version":3,"file":"my-element_test.js","sourceRoot":"","sources":["../../src/test/my-element_test.ts"],"names":[],"mappings":";AAAA;;;;GAIG;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAyDE","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/*\nimport {MyElement} from '../my-element.js';\n\nimport {fixture, assert} from '@open-wc/testing';\nimport {html} from 'lit/static-html.js';\n\nsuite('my-element', () => {\n  test('is defined', () => {\n    const el = document.createElement('my-element');\n    assert.instanceOf(el, MyElement);\n  });\n\n  test('renders with default values', async () => {\n    const el = await fixture(html`<my-element></my-element>`);\n    assert.shadowDom.equal(\n      el,\n      `\n      <h1>Hello, World!</h1>\n      <button part=\"button\">Click Count: 0</button>\n      <slot></slot>\n    `\n    );\n  });\n\n  test('renders with a set name', async () => {\n    const el = await fixture(html`<my-element name=\"Test\"></my-element>`);\n    assert.shadowDom.equal(\n      el,\n      `\n      <h1>Hello, Test!</h1>\n      <button part=\"button\">Click Count: 0</button>\n      <slot></slot>\n    `\n    );\n  });\n\n  test('handles a click', async () => {\n    const el = (await fixture(html`<my-element></my-element>`)) as MyElement;\n    const button = el.shadowRoot!.querySelector('button')!;\n    button.click();\n    await el.updateComplete;\n    assert.shadowDom.equal(\n      el,\n      `\n      <h1>Hello, World!</h1>\n      <button part=\"button\">Click Count: 1</button>\n      <slot></slot>\n    `\n    );\n  });\n\n  test('styling applied', async () => {\n    const el = (await fixture(html`<my-element></my-element>`)) as MyElement;\n    await el.updateComplete;\n    assert.equal(getComputedStyle(el).paddingTop, '16px');\n  });\n});\n*/\n"]}